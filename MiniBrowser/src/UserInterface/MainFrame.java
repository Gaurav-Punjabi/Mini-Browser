/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import EventHandling.WebPageLoader;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.Timer;
import jiconfont.icons.GoogleMaterialDesignIcons;
import jiconfont.swing.IconFontSwing;

/**
 * This is class is used to represent the Front-End of the browser.
 * It displays the content of the browser to the user provided by the WebPageLoader
 * class.Also the input from the user is taken using this class .i.e User can 
 * interact with browser using the class.
 * @author gauravpunjabi
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * *************************************************************************
     *                              CONSTRUCTOR
     * *************************************************************************
     */
    /**
     * Creates new form MainFrame
     * and initializes the webPageLoader by passing its own reference to it.
     */
    public MainFrame() {
        initComponents();
        customInit();
        webpageLoader = new WebPageLoader(this);
    }
    /**
     * This method is just used to initialize all the Data Members of the Form. 
     */
    private void customInit() {
        IconFontSwing.register(GoogleMaterialDesignIcons.getIconFont());
        jlBack.setIcon(IconFontSwing.buildIcon(GoogleMaterialDesignIcons.ARROW_BACK, 32));
        jlNext.setIcon(IconFontSwing.buildIcon(GoogleMaterialDesignIcons.ARROW_FORWARD, 32));
        jlReload.setIcon(IconFontSwing.buildIcon(GoogleMaterialDesignIcons.REFRESH, 32));
    }
    /**
     * This method is called from the timer ActionEvent it just increases the 
     * value of the progress bar.
     */
    private void loadingAction() {
        value += 3;
        this.jProgressBar1.setValue(value);
        if(value > 100) {
            jProgressBar1.setVisible(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jpToolbar = new javax.swing.JPanel();
        jlReload = new javax.swing.JLabel();
        jlBack = new javax.swing.JLabel();
        jtfAddress = new javax.swing.JTextField();
        jlNext = new javax.swing.JLabel();
        jspDisplay = new javax.swing.JScrollPane();
        jpDisplay = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 903));

        jpToolbar.setBackground(new java.awt.Color(255, 255, 255));
        jpToolbar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jlReload.setBackground(new java.awt.Color(255, 255, 255));

        jtfAddress.setFont(new java.awt.Font("Raleway", 0, 24)); // NOI18N
        jtfAddress.setText("jTextField1");
        jtfAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAddressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpToolbarLayout = new javax.swing.GroupLayout(jpToolbar);
        jpToolbar.setLayout(jpToolbarLayout);
        jpToolbarLayout.setHorizontalGroup(
            jpToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpToolbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlBack, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlNext, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlReload, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 1214, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpToolbarLayout.setVerticalGroup(
            jpToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpToolbarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfAddress)
                    .addComponent(jlReload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlNext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jspDisplay.setBorder(null);

        jpDisplay.setBackground(new java.awt.Color(255, 255, 255));
        jpDisplay.setSize(new java.awt.Dimension(1366, 705));
        jpDisplay.setLayout(null);
        jspDisplay.setViewportView(jpDisplay);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jspDisplay)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jpToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jspDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * This method is used to input the URL from the user pass it to displayPage
     * method of the WebPageLoader the start the timer to display the progress 
     * bar.
     * @param evt 
     */
    private void jtfAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAddressActionPerformed
        timer = new Timer(1,new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                loadingAction();
            }
        });
        value = 0;
        jProgressBar1.setVisible(true);
        timer.start();
        webpageLoader.displayPage(jtfAddress.getText());
    }//GEN-LAST:event_jtfAddressActionPerformed
    
    
    /**
     * *************************************************************************
     *                               GETTERS
     * *************************************************************************
     */
    /**
     * It returns the back button of the browser. 
     * @return Back-Button-Label
     */
    public JLabel getBackLabel() {
        return jlBack;
    }
    /**
     * It returns the Next button of the browser.
     * @return jlNext
     */
    public JLabel getNextLabel() {
        return jlNext;
    }
    /**
     * It return the Display Panel of the browser on which the contents needs to
     * be displayed.
     * @return jpDisplay
     */
    public JPanel getDisplayPanel() {
        return jpDisplay;
    }
    /**
     * It returns the reload Label of the Browser.
     * @return jlReload
     */
    public JLabel getReloadLabel() {
        return jlReload;
    }
    /**
     * It returns the Address-URL Text Field of the browser.
     * @return jtfAddress
     */
    public JTextField getAddressTextField() {
        return jtfAddress;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Macintosh".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    /**
     * *************************************************************************
     *                         VARIABLE_DECLARATIONS
     * *************************************************************************
     */
    private WebPageLoader webpageLoader;
    private Timer timer;
    int value = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel jlBack;
    private javax.swing.JLabel jlNext;
    private javax.swing.JLabel jlReload;
    private javax.swing.JPanel jpDisplay;
    private javax.swing.JPanel jpToolbar;
    private javax.swing.JScrollPane jspDisplay;
    private javax.swing.JTextField jtfAddress;
    // End of variables declaration//GEN-END:variables
}
